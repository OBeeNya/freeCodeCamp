*** BASIC CSS ***

You can apply CSS styling with the "style" attribute, with rules within a <style> tag or by writing in an external style sheet.

Style attribute:
  <h2 style="color: red;"> </h2>

Style block:
  <style>
    h2 {
      color: red;
    }
  </style>

Class declaration:
  <style>
    .red-text {
     color: red;
    }
  </style>
  <h2 class="red-text"> </h2>

Font size:
  h1 {
   font-size: 10px;
  }

Font element:
  h1 {
   font-family: font, fallback;
  }

Import a font:
  <link href="url" rel="stylesheet" type="text/css">

Image size:
  <style>
   .large-img {
     width: 500px;
   }
  </style>

Borders:
  <style>
   .thin-red-border {
      border-color: red;
      border-width: 5px;
      border-style: solid;
      border-radius: 100px/50%;
     }
  </style>

Background color:
  background-color: red;

Id attributes can be used to style a single element and need to be unique for each element:
  #id_name {
    background-color: red;
    }

Padding controls the amount of space between the content of an element and its border.
  padding-top: **px;
  padding-right: **px;
  padding-bottom: **px;
  padding-left: **px;
or
  padding: **px, **px, **px, **px;

Margin controls the amount of space between the border of an element and surrounding elements.
  margin-top: **px;
  margin-right: **px;
  margin-bottom: **px;
  margin-left: **px;
or
  margin: **px, **px, **px, **px;

Attribute selectors to style element:
  [type='attribute'] {
    ...
  }

Relative units are relative to an other length value, em or rem.

Inheritance:
  body < class < class declared later < id < inline style < !important

Hexcode:
  color: #******;
  0 to 9 then A to F
  first 2 * for RED, then GREEN, then BLUE
  or color: #***;
  with only 1 * per R G B 
  
RGB values:
  color: rgb(*, *, *);
  from 0 to 255

CSS variable:
  --variable-name: value;
and to use it:
  property: var(--variable-name, fallback);

Declare a variable in root to make it globally accessible:
  <style>
    :root {
      ...
    }
  </style>
