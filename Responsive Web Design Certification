*** BASIC HTML AND HTML5 ***

Headers go from h1 to h6:
  <h1> </h1>

Paragraphs:
  <p> </p>

Commenting:
  <!-- -->

Main HTML tags:
  main, header, footer, nav, video, article, section etc.

Main is the main content of a page:
  <main> <h1> </h1> <p> </p> </main>

Adding an image:
  <img src="url of the image" alt="description of the image">
  The alt attribute improves accessibility and can remain empty if the image is purely decorative.

The a anchor element can link to external content:
  <a href="url">"text appearing as link"</a>

but also to an internal element:
  <a href="id">Name>

Target"_blank" specifies to open in a new tab:
  <a target="_blank" href"url">text for link>

Dead link:
  href="#" 

Turning an image into a link:
  <a href"#"><img src="url" alt="descriptive text"></a>

Unordered list:
  <ul>
   <li> </li>
   <li> </li>
  </ul>

Ordered list:
  <ol>
   <li> </li>
   <li> </li>
  </ol>

Text field:
  <input type="text">

Placeholder displays into input before user has input anything:
  <input type="text" placeholder="placeholder text">

Form:
  <form action="url where you want the data to be sent">
   <input>
  </form>

Summit button can be an element part of a form:
  <button type="submit">text on button</button>

You can add a required attribute so a field must be filled out before submitting the form:
  <input type="text" required>

Radio is an other type of input, can be nested into its own label element:
  <label for="button 1">
    <input id="button 1" type="radio" name="list name"> Button 1
  </label>
  <label for="button 2">
    <input id="button 2" type="radio" name="list name"> Button 2
  </label>

Checkbox:
  <label for="check 1">
   <input id="check 1" type="checkbox" name="list name"> Check 1
  </label>

Add the value attribute to determine the value sent by the form to the server:
  <input id="button" value="button" type="radio/checkbox" name="list button"> Button

You can chose to have a radio button/checkbox checked by defaukt:
  <input id="button" value="button" type="radio/checkbox" name="list button" checked> Button

Division element is a general purpose container for other elements:
  <div> </div>

Declare the Doctype of an HTML document:
  <!DOCTYPE html>
  <html> </html>

Head is used for meta elements at top of page and Body for the actual page content:
  <head> </head>
  <body> </body>


*** BASIC CSS ***

You can apply CSS styling with the "style" attribute, with rules within a <style> tag or by writing in an external style sheet.

Style attribute:
  <h2 style="color: red;"> </h2>

Style block:
  <style>
    h2 {
      color: red;
    }
  </style>

Class declaration:
  <style>
    .red-text {
     color: red;
    }
  </style>
  <h2 class="red-text"> </h2>

Font size:
  h1 {
   font-size: 10px;
  }

Font element:
  h1 {
   font-family: font, fallback;
  }

Import a font:
  <link href="url" rel="stylesheet" type="text/css">

Image size:
  <style>
   .large-img {
     width: 500px;
   }
  </style>

Borders:
  <style>
   .thin-red-border {
      border-color: red;
      border-width: 5px;
      border-style: solid;
      border-radius: 100px/50%;
     }
  </style>

Background color:
  background-color: red;

Id attributes can be used to style a single element and need to be unique for each element:
  #id_name {
    background-color: red;
    }

Padding controls the amount of space between the content of an element and its border.
  padding-top: **px;
  padding-right: **px;
  padding-bottom: **px;
  padding-left: **px;
or
  padding: **px, **px, **px, **px;


Margin controls the amount of space between the border of an element and surrounding elements.
  margin-top: **px;
  margin-right: **px;
  margin-bottom: **px;
  margin-left: **px;
or
  margin: **px, **px, **px, **px;

Attribute selectors to style element:
  [type='attribute'] {
    ...
  }

Relative units are relative to an other length value, em or rem.

Inheritance:
  body < class < class declared later < id < inline style < !important

Hexcode:
  color: #******;
  0 to 9 then A to F
  first 2 * for RED, then GREEN, then BLUE
  or color: #***;
  with only 1 * per R G B 
  
RGB values:
  color: rgb(*, *, *);
  from 0 to 255

CSS variable:
  --variable-name: value;
and to use it:
  property: var(--variable-name, fallback);

Declare a variable in root to make it globally accessible:
  <style>
    :root {
      ...
    }
  </style>


*** APPLIED VISUAL DESIGN ***

Text-align property:
  text-align: justify;
  text-align: center;
  text-align: left;
  text-align: right;
  
Text properties:
  font-weight: bold; = <strong> </strong>
  text-decoration: underline; = <u> </u>
  font-style: italic; = <em> </em>
  text-decoration: line-through; = <s> </s>
  
Horizontal line:
  <hr>

Background color property of text:
  background-color: rgba(*,*,*,*);
  alpha goes from 0 to 1 for opacity
  
Box shadow:
  box-shadow: offset-x offset-y blur-radius spread-radius color;
  
Opacity:
  opacity: *;
  from 0 to 1, 1 being opaque
  
Text transform:
  text-transform: lowercase; = transform me
  text-transform: uppercase; = TRANSFORM ME
  text-transform: capitalize; = Transform Me
  text-transform: initial; = default value
  text-transform: inherit; = value from parent element
  text-transform: none; = original text

Line height:
  changes the amount of vertical space between each line
  line-height: *px;
  
Hover state of an anchor tag:
  :hover pseudo-class selector
  a:hover{ color:*; }

Relative position:
  position: relative;
  top/right/bottom/left: *px/%/em;
  does not remove from the normal flow
  no impact on the positions of surrounding items
  
Absolute position:
  position: absolute;
  top/right/bottom/left: *px/%/em;
  locks the element in position relative to its parent container
  remove the element from the normal flow
  surrounding items ignore it

Fixed position:
  position: fixed;
  top/right/bottom/left: *px/%/em; 
  locks an element relative to the browser window
  removes the element from the normal flow
  other items don't recognize it
  won't move when the user scrolls
  
Float property:
  float: left/right;
  removes from the normal flow
  
Position of overlapping elements:
  z-index:*;
  higher value moves it higher in the stack
  
Margin property:
  margin: auto; = centers horizontally
  
Complementary colors:
  the sum of 2 perfectly complementary colors should give #FFFFFF
  the strong visual contrast can be jarring if overused, one of the 2 colors will usually be dominant and the other used to bring visual attention to certain content

Tertiary color:
  secondary color is created by mixing 2 primary colors
  tertiary color is created by mixing a secondary color with one of its primary color
  various harmonious combinations possible, one being the split-complementary color scheme: base color + 2 colors adjacent to its complement
  
Hsl property:
  hsl(*, *%, *%)
  hue: 0 to 360
  saturation: amount of gray in color, fully saturated has no gray
  lightness: amount of white or black, fully being white

Linear gradient:
  background: linear-gradient(*deg, color1, color2...);
  background: repeating-linear-gradient(*deg, color1 *px, color2 *px...);
  
Image as background:
  background: url(url);

Transform property:
  transform: scale(*);
  transform: skewX(*deg);
  transform: skewY(*deg);
  works on hover: element:hover { transform: scale(*); }
  
::before and ::after pseudo elements:
  element::before {
    content:"*";
    background-color:*;
    border-radius:*%;
    position:*;
    height:*;
    width:*;
    top/right/bottom/left:*px;
  }

Animation properties:
  element {                             // works with :hover
    animation-name: *;
    animation-duration: *s;
    animation-fill-mode: *;            // forwards = animation keeps on going
    animation-iteration-count: *;     //  number or infinite
    animation-timing-function: *;     //  popular options: ease, ease-in, ease-out, linear... / cubic-bezier(x1, y1, x2, y2);
  }
  @keyframes animation-name {
    0% {
      ...                              // top/right/bottom/left: 8px; = creates movement
    }                                 //  opacity: *; = fading
    100% {
      ...
    }
  }


*** APPLIED ACCESSIBILITY ***

Use of headings:
  headers should have semantic meaning
  headers with equal rank implies new sections, lower ranks implies sub-sections
  each page should only have one h1 header

Use of main:
  only one per page
  used to wrap the main content
  surround the information related to the entral topic of your page
  
Use of article:
  used to wrap independant, self-contained content
  the section element can be used within it and is used for grouping thematically related content
  
Use of header:
  used to wrap introductory information or navigation links
  works well for content that is repeated on multiple pages
  is meant to be used on the body element, is different from the head element which contains the page's title and meta information
  
Use of nav:
  meant to wrap around the main navigation links of your page
  
Use of footer:
  primarily used to contain copyright information or links to related documents
  
Use of audio element:
  <audio id="*" controls>                 // controls attribute adds play, pause and other default controls
    <source src="url" type="*" />         // type can usually be audio/mpeg
  </audio>
  



















