*** INTERMEDIATE ALGORITHM SCRIPTING ***

Sum all numbers in a range:
  function sumAll(arr) {
    var sortedArr=arr.sort(function(a,b){
      return a-b;
    });
    var result=0;
    var newArr=sortedArr.slice();
    for(let i=0;i<(sortedArr[1]-sortedArr[0]-1);i++){
      newArr.splice(i+1,0,newArr[i]+1)
    }
    for(let i=0;i<newArr.length;i++){
      result+=newArr[i];
    }
    return result;
  }
  
Diff two arrays:
  function diffArray(arr1, arr2) {
    var resultArr=[];
      for(let i=0;i<arr1.length;i++){
        if(arr2.indexOf(arr1[i])==-1){
          resultArr.push(arr1[i]);
        }
      }
      for(let i=0;i<arr2.length;i++){
        if(arr1.indexOf(arr2[i])==-1){
          resultArr.push(arr2[i])
        }
      }
      return resultArr;
  }
  
Seek and destroy:
  function destroyer(arr, ...arg) {
    var resultArr=arr.slice('');
      arg.forEach(arg=>{
        if(resultArr.indexOf(arg)!=-1){
          resultArr.splice(resultArr.indexOf(arg),1)
      }
        if(resultArr.indexOf(arg)!=-1){
          resultArr.splice(resultArr.indexOf(arg),1)
      }
    })
    return resultArr;
  }
  
Wherefore art thou:
  function whatIsInAName(collection, source) {
    var arr = [];
    var sourceKeys=Object.keys(source);
    for(let i=0;i<collection.length;i++){
      var nbKeys=0;
      for(let j=0;j<sourceKeys.length;j++){
        if(collection[i][sourceKeys[j]]==source[sourceKeys[j]]){
          nbKeys++;
        }
        if(nbKeys==sourceKeys.length){
          arr.push(collection[i]);
        }
      }
    }
    return arr;
  }
  
Spinal tap case:
  
